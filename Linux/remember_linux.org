* Cosas para recordar de Linux

** Debian related
*** Agregar la architectura 32 bits a una 64
      ~sudo dpkg --add-architecture i386~
      ~sudo apt-get update~
      ~sudo apt-get install build-essential gcc-multilib rpm libstdc++6:i386~
      ~libgcc1:i386 zlib1g:i386 libncurses5:i386~
*** programa para saber la info de hardware
      ~apt-get install hardinfo~
*** Para instalar Telegram
      - Descargar la app de la pagina
      - como root ~mv Telegram/ /opt/~
      - enlace simbolico: ~ln -s /opt/Telegram/Telegram//usr/bin/telegram~
*** Para saber donde mierda esta instalada una libreria
      - ~dpkg -L nombre_libreria~
** General
*** Salir-volver de un proceso suspendido(Ctrl-z)
      ~fg~
**** Tmux
***** Abrir sesion
            ~tmux -2 new -s session_name~
***** reanudar sesion
            ~tmux -2 attach -t session_name~
***** cambiar a otra sesion
            ~tmux switch -t session_name~
***** ver todas las sesiones que hay
            ~tmux list-sessions~
**** mountar un puto .iso
            ~7z x puto.iso~
**** quemar un iso en un usb
            Tener en cuenta que debemos saber bien cual es el puerto en el
            que esta conectado nuestro usb.
            ~sudo dd bs=4M if=input.iso of=/dev/sdx && sync~
**** encriptar archivo desde la consola
            ~gpg -c archivo~
**** generar un pass piola(con pwgen)
            Por ejemplo un pass de 37 chars
            ~pwgen 37 1~
**** para saber como se llama internamente un programa(esto es re para i3)
            Esto lo usas en i3-wm cuando queres que un programa x se ejecute
            solo en un workspace(por ejemplo yo solo veo los pdf en el
            workspace 4 con zathura)
            ~xprop~
**** convertir una frase a ASCII art
            ~figlet text_a_convertir~
**** saber el ip de una raspberry pi
~hostname -I~
*** sincronizar la hora
      ~timedatectl set-ntp true~
** Saber el tipo de memoria RAM que tenemos
      ~sudo dmidecode --type 17~
** Cambiar la imagen de fondo de lightdm
Primero debemos poner la/s imagenes que queremos en una carpeta que tenga
acceso el root, por ejemplo: ~/usr/share/pixmaps~
Luego agregamos la imagen en el archivo de configuracion:
~/etc/lightdm/lightdm-gtk-greeter.conf~
** Archlinux related
*** update archlinux
      ~sudo pacman -Syu~
*** Donwgrade a package(instalar un package viejo)
      - Primero instalamos downgrade: ~sudo pacman -S downgrade~
      - Luego elegimos el package que queremos instalar:
      ~sudo downgrade nombre_libreria~
*** Agregar yaourt a pacman(yaourt es un repositorio comunitario donde los
usuarios agregan recetas para compilar paquetes, utilizan un pseudo makefile
donde se listan las dependencias y los comandos para compilar el paquete.).
Agregamos en el archivo ~/etc/pacman.conf~
      #+begin_src emacs-lisp
      [archlinuxfr]
      SigLevel = Never
      Server = http://repo.archlinux.fr/$arch
      #+end_src
      Luego hacemos un update de pacman e instalamos con:
      ~sudo pacman -Sy yaourt~
*** instalar utilidades para files
      ~sudo pacman -S file-roller p7zip zip unzip unrar~
*** instalar audio apps
      ~sudo pacman -S pulseaudio pavucontrol pulseaudio-alsa alsa-utils~
*** Desinstalar package con pacman
      ~sudo pacman -Rns package~
*** Solucionar el problema de arduino makefile con avrdude
      Primero instalamos avrdude: ~sudo pacman -S avrdude~
      Despues suponiendo que tenemos a arduino ide en ~/.arduino_ide~,
      borramos el binario que trae ~avrdude~, osea:

      ~rm home/elsuizo/.arduino_ide/hardware/tools/avr/bin/avrdude~

      Luego "linkeamos" el avrdude del sistema con el que borramos(para que
      utilice el del sistema y no rompa las pelotas)

      ~ln -s /usr/bin/avrdude /home/elsuizo/.arduino_ide/hardware/tools/avr/bin/avrdude~

*** Instalar Telegram
      ~yaourt -S telegram-desktop-bin~
*** Instalar fortran
      ~sudo pacman -S gcc-fortran~
*** Instalar LaTeX
      ~sudo pacman -S texlive-most~
*** Instalar complementos para cmus
      ~sudo pacman -S --asdeps libmad~
*** Instalar Arduino Makefile para programar con editor de texto
    ~wget -O arduino.tar.xv http://arduino.cc/download.php\?f\=/arduino-1.6.8-linux64.tar.xz~
    ~mkdir ~/.arduino_ide~
    ~tar xf arduino.tar.xv -C ~/.arduino_ide --strip-components=1~
    ~git clone https://github.com/sudar/Arduino-Makefile.git ~/.arduino_mk~
    - Despues hacemos un Makefile que tenga las siguientes lineas:
	#+begin_src emacs-lisp
	ARDUINO_DIR = /home/elsuizo/.arduino_ide
	ARDMK_DIR = /home/elsuizo/.arduino_mk
	BOARD_TAG = uno
	include $(ARDMK_DIR)/Arduino.mk
	#+end_src
      Donde ~ARDUINO_DIR~ es el path al arduino IDE
      ~ARDMK_DIR~ es el path al arduino makefile repo
      ~BOARD_TAG~ es el nombre de la placa que estamos usando
*** Acceder a una red wifi sin NetworkMannager(por consola)
  - Dependencias: ~sudo pacman -S iw wpa_supplicant dialog~
  - Primero accedemos al nombre del router al que queremos conectarnos con el
    comando: ~ip link~
  - Luego para conectarnos: ~sudo wifi-menu nombreDelRouter~
*** Solucionar problema alacritty-gnome
      ~pacman -S fcitx fcitx-configtool~
*** Saber la placa de video que tengo
  - lspci | grep Grap
*** instalar iconos piolas
      ~yaourt numix-icon-theme~
*** problema po2man
cuando pasa esto hacemos ~source /etc/profile~
*** acceder a los scripts de openocd
Como openocd hay que instalarlo desde AUR parece que cambia la carpeta donde
se instala siempre, ahora por ejemplo para correr en la "blue-pill" seria
asi:

      #+begin_src bash
      openocd -f /usr/share/openocd/scripts/interface/stlink-v2.cfg -f /usr/share/openocd/scripts/target/stm32f1x.cfg
      #+end_src
*** Para iniciar Bluetooth e instalar una GUI
      - GUI: ~sudo pacman -S bluez bluez-utils~

      - Iniciar el deamon: ~sudo systemctl start bluetooth~
      - Si queremos que sea permanente o sea que se inicie cada vez que
        booteamos: ~sudo systemctl enable bluetooth~
*** Iniciar ssh daemon
~sudo systemctl start sshd~
